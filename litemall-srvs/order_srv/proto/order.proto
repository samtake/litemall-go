syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";


service Order {
    //购物车
    rpc CartItemList(UserInfo) returns(CartItemListResponse); //获取用户的购物车信息
    rpc CreateCartItem(CartItemRequest) returns(ShopCartInfoResponse); //添加商品到购物车
    rpc UpdateCartItem(CartItemRequest) returns(google.protobuf.Empty); //修改购物车信息
    rpc DeleteCartItem(CartItemRequest) returns(google.protobuf.Empty); //删除购物车条目

    //订单
    rpc CreateOrder(OrderRequest) returns (OrderInfoResponse); //创建订单
    rpc OrderList(OrderFilterRequest) returns (OrderListResponse); // 订单列表
    rpc OrderDetail(OrderRequest) returns (OrderInfoDetailResponse); // 订单详情
    rpc UpdateOrderStatus(OrderStatus) returns (google.protobuf.Empty); // 修改订单状态
}

message UserInfo {
    int32 id = 1;
}

message OrderStatus {
    int32 id = 1;
    string orderSn = 2;
    string status = 3;
}

message CartItemRequest {
    int32 id = 1;
    int32 userId = 2;
    int32 goodsId = 3;
    string goodsName = 4;
    string goodsImage = 5;
    float goodsPrice = 6;
    int32 nums = 7;
    bool checked = 8;
}

message OrderRequest {
    int32 id = 1;
    int32 userId = 2;
    string address = 3;
    string name = 4;
    string mobile = 5;
    string post = 6;
}

message OrderInfoResponse {
    int32 id = 1;
    int32 userId = 2;
    string orderSn = 3;
    string payType = 4;
    string status = 5;
    string post = 6;
    float total = 7;
    string address = 8;
    string name = 9;
    string mobile = 10;
    string addTime = 11;
}

message ShopCartInfoResponse {
    int32 id = 1;
    int32 userId = 2;
    int32 goodsId = 3;
    int32 nums = 4;
    bool checked = 5;
}

message OrderItemResponse {
    int32 id = 1;
    int32 orderId = 2;
    int32 goodsId = 3;
    string goodsName = 4;
    string goodsImage = 5;
    float goodsPrice = 6;
    int32 nums = 7;
}

message OrderInfoDetailResponse {
    OrderInfoResponse orderInfo = 1;
    repeated OrderItemResponse goods = 2;
}

message OrderFilterRequest {
    int32 userId = 1;
    int32 pages = 2;
    int32 pagePerNums = 3;
}

message OrderListResponse {
    int32 total = 1;
    repeated OrderInfoResponse data = 2;
}

message CartItemListResponse {
    int32 total = 1;
    repeated ShopCartInfoResponse data = 2;
}



/*
1、brew install protobuf \ protoc --version
2、生成的客户端和服务器代码。
protoc --go_out=. --go_opt=paths=source_relative \
    --go-grpc_out=. --go-grpc_opt=paths=source_relative  user.proto
3、在handler实现UserServer的以下方法：
            // UserServer is the server API for User service.
        // All implementations must embed UnimplementedUserServer
        // for forward compatibility
        type UserServer interface {
          GetUserList(context.Context, *PageInfo) (*UserListResponse, error)
          GetUserByMobile(context.Context, *MobileRequest) (*UserInfoResponse, error)
          GetUserById(context.Context, *IdRequest) (*UserInfoResponse, error)
          CreateUser(context.Context, *CreateUserInfo) (*UserInfoResponse, error)
          UpdateUser(context.Context, *UpdateUserInfo) (*emptypb.Empty, error)
          CheckPassWord(context.Context, *PasswordCheckInfo) (*CheckResponse, error)
          mustEmbedUnimplementedUserServer()
        }

具体参考：https://grpc.io/docs/languages/go/quickstart/#regenerate-grpc-code
包循环问题：
package command-line-arguments
	imports litemall-srvs/user_srv/handler
	imports litemall-srvs/user_srv/proto
	imports litemall-srvs/user_srv/handler: import cycle not allowed

Compilation finished with exit code 1

想官方demo这样子解决就可以了，不需要分包：
// server is used to implement helloworld.GreeterServer.
type server struct {
	pb.UnimplementedGreeterServer
}
*/